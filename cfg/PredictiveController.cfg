#!/usr/bin/env python
PACKAGE = "predictive_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ==================================== Parameters for the solver =====================================================

solv_constr = gen.add_group("Solver Stage Cost Parameters", "solver_constraints")
solv_constr.add("Kx",                double_t, 1, "X Position error weight", 10.0, 0.0, 100.0)
solv_constr.add("Ky",                double_t, 1, "Y Position error weight", 40.0, 0.0, 100.0)
solv_constr.add("Ktheta",            double_t, 1, "Orientation error weight", 3.0, 0.0, 100.0)
solv_constr.add("Kv",            double_t, 1, "Forward velocity weight", 2.0, 0.0, 100.0)
solv_constr.add("Kw",            double_t, 1, "Angular velocity weight", 2.0, 0.0, 100.0)

solv_constr = gen.add_group("Solver Terminal Cost Parameters", "solver_constraints")
solv_constr.add("Px",                double_t, 1, "X Position error weight", 10.0, 0.0, 100.0)
solv_constr.add("Py",                double_t, 1, "Y Position error weight", 40.0, 0.0, 100.0)
solv_constr.add("Ptheta",            double_t, 1, "Orientation error weight", 3.0, 0.0, 100.0)

solv_constr = gen.add_group("Slack variable parameters","solver_constraints")
solv_constr.add("Ws",                double_t, 1, "X Position error weight", 10000.0, 0.0, 10000.0)
solv_constr.add("WR",                double_t, 1, "X Position error weight", 1.0, 0.0, 50.0)

# ==================================== Parameters for limits enforcement =====================================================
limits = gen.add_group("Controller Options", "options")
limits.add("enable_output",     bool_t,   0, "Enable/Disable contorl output", True)
limits.add("n_iterations",     int_t,   1, "Number of KKT improvement iterations", 1, 1, 100)
limits.add("simulation_mode",     bool_t,   0, "Enable gazebo simulation", True)

exit(gen.generate(PACKAGE, "predictive_control", "PredictiveController"))